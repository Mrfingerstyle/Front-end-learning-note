{"version":3,"sources":["main.js"],"names":["$","find","addClass"],"mappings":"AAAA;AACA;AACA;AACI;AACA;AACA;AAEJ;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEAA,CAAC,CAAC,OAAD,CAAD,CAAWC,IAAX,CAAgB,QAAhB,EAA0BC,QAA1B,CAAmC,KAAnC,GAA0C","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["// 返回API对象\n// const api = jQuery('.test')\n// 遍历所有获取的元素 添加className\n    // .addClass('red') // 此处的this就是API\n    // .addClass('blue')\n    // .addClass('green') // 链式操作\n\n// 链式风格\n// 也叫做jQuery风格 window.jQuery是我们提供的全局函数\n\n// 特殊函数jQuery\n// jQuery(选择器)用于获取对应的元素\n// 但是它不反悔这些元素 相反 它返回一个对象 称为jQuery构造出的对象\n// 这个对象可以操作对应的元素\n\n// jQuery是构造函数吗 \n// 是 它确实构造出了一个对象\n// 不是 因为它不加new就能构造出一个对象 \n// 结论\n// jQuery是一个不需要加new的构造函数\n// jQuery不是常规意义上的构造函数\n// 因为jQuery使用了一些技巧\n\n// jQuery对象代指jQuery函数构造出来的对象\n// jQuery对象 不是 jQuery这个对象\n\n// const api_1 = jQuery('.test')\n// api_1.addClass('blue')\n\n// const api_2 = api_1.find('.child').addClass('red')\n// api_1.addClass('green')\n\n/*\njQuery('.test')\n.find('.child')\n.addClass('red')\n.addClass('blue')\n.addClass('green')\n.end()\n.addClass('yellow')\n*/\n\n// console.log(jQuery('.test').oldApi);\n\n/*\nconst child = jQuery('.test')\n.find('.child')\nchild.each((div) => console.log(div))\n*/\n\n/*\nconst child = jQuery('.test')\nchild.children().print()\n*/\n\n$('#test').find('.child').addClass('red') // 请确保这句话成功执行\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}